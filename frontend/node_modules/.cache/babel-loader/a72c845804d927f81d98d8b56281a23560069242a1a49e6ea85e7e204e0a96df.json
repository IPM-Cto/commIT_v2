{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\muletto1\\\\WebstormProjects\\\\commIT_v2\\\\frontend\\\\src\\\\contexts\\\\UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const useUser = () => {\n  _s();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n_s(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const UserProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    isAuthenticated,\n    user,\n    getAccessTokenSilently\n  } = useAuth0();\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 🔥 CRITICAL FIX: Load from localStorage on mount\n  useEffect(() => {\n    console.log('🔄 UserContext: Initializing...');\n\n    // Try to load from localStorage first (for immediate access)\n    const cachedData = localStorage.getItem('user_data');\n    if (cachedData) {\n      try {\n        const parsed = JSON.parse(cachedData);\n        console.log('✅ UserContext: Loaded from localStorage:', parsed);\n        setUserData(parsed);\n        setLoading(false);\n      } catch (err) {\n        console.error('❌ UserContext: Error parsing localStorage:', err);\n        localStorage.removeItem('user_data');\n      }\n    } else {\n      console.log('⚠️ UserContext: No cached data found');\n      setLoading(false);\n    }\n  }, []);\n\n  // Fetch from API when authenticated\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      console.log('🔐 UserContext: User authenticated, fetching data...');\n      fetchUserData();\n    }\n  }, [isAuthenticated, user]);\n  const fetchUserData = async () => {\n    try {\n      console.log('📤 UserContext: Fetching user data from API...');\n      const token = await getAccessTokenSilently();\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/auth/me`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('✅ UserContext: Raw API response:', response.data);\n\n      // 🔥 CRITICAL FIX: Extract user object from response\n      // API returns: { success: true, user: {...} }\n      // We need to store just the user object\n      let userObject;\n      if (response.data.user) {\n        // If response has a 'user' property, use that\n        userObject = response.data.user;\n        console.log('✅ UserContext: Extracted user from response.data.user');\n      } else if (response.data.user_type) {\n        // If response directly has user_type, it's already the user object\n        userObject = response.data;\n        console.log('✅ UserContext: Using response.data directly as user object');\n      } else {\n        console.error('❌ UserContext: Invalid API response structure:', response.data);\n        throw new Error('Invalid API response structure');\n      }\n      console.log('✅ UserContext: Final user object:', userObject);\n      console.log('✅ UserContext: User type extracted:', userObject.user_type);\n\n      // Store the clean user object\n      setUserData(userObject);\n      localStorage.setItem('user_data', JSON.stringify(userObject));\n      localStorage.setItem('user_type', userObject.user_type);\n    } catch (err) {\n      console.error('❌ UserContext: Error fetching from API:', err);\n      setError(err.message);\n\n      // Keep cached data if API fails\n      const cachedData = localStorage.getItem('user_data');\n      if (cachedData && !userData) {\n        console.log('⚠️ UserContext: Using cached data as fallback');\n        setUserData(JSON.parse(cachedData));\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateUserData = async updates => {\n    try {\n      setLoading(true);\n      const token = await getAccessTokenSilently();\n      const response = await axios.put(`${process.env.REACT_APP_API_URL}/users/profile`, updates, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // 🔥 CRITICAL FIX: Handle response structure properly\n      let updatedUser;\n      if (response.data.user) {\n        updatedUser = response.data.user;\n      } else if (response.data.user_type) {\n        updatedUser = response.data;\n      } else {\n        throw new Error('Invalid update response structure');\n      }\n      console.log('✅ UserContext: Profile updated:', updatedUser);\n      setUserData(updatedUser);\n      localStorage.setItem('user_data', JSON.stringify(updatedUser));\n      localStorage.setItem('user_type', updatedUser.user_type);\n      return updatedUser;\n    } catch (err) {\n      console.error('❌ UserContext: Error updating user data:', err);\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const clearUserData = () => {\n    console.log('🗑️ UserContext: Clearing user data');\n    setUserData(null);\n    localStorage.removeItem('user_data');\n    localStorage.removeItem('user_type');\n  };\n\n  // 🔥 CRITICAL FIX: userType extraction now works correctly\n  const value = {\n    userData,\n    userType: (userData === null || userData === void 0 ? void 0 : userData.user_type) || null,\n    // Clean extraction\n    loading,\n    error,\n    isAuthenticated,\n    fetchUserData,\n    updateUserData,\n    clearUserData,\n    isProvider: (userData === null || userData === void 0 ? void 0 : userData.user_type) === 'provider',\n    isCustomer: (userData === null || userData === void 0 ? void 0 : userData.user_type) === 'customer',\n    isAdmin: (userData === null || userData === void 0 ? void 0 : userData.user_type) === 'admin'\n  };\n\n  // Debug logging with more details\n  useEffect(() => {\n    console.log('📊 UserContext State:', {\n      userData: userData ? {\n        hasData: true,\n        email: userData.email,\n        user_type: userData.user_type,\n        _id: userData._id\n      } : 'Null',\n      userType: value.userType,\n      loading,\n      isAuthenticated,\n      isProvider: value.isProvider,\n      isCustomer: value.isCustomer,\n      isAdmin: value.isAdmin\n    });\n  }, [userData, loading, isAuthenticated]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 10\n  }, this);\n};\n_s2(UserProvider, \"mU8vuHVB4nrqUXPnmHQOe1d+jPU=\", false, function () {\n  return [useAuth0];\n});\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useAuth0","axios","jsxDEV","_jsxDEV","UserContext","useUser","_s","context","Error","UserProvider","children","_s2","isAuthenticated","user","getAccessTokenSilently","userData","setUserData","loading","setLoading","error","setError","console","log","cachedData","localStorage","getItem","parsed","JSON","parse","err","removeItem","fetchUserData","token","response","get","process","env","REACT_APP_API_URL","headers","Authorization","data","userObject","user_type","setItem","stringify","message","updateUserData","updates","put","updatedUser","clearUserData","value","userType","isProvider","isCustomer","isAdmin","hasData","email","_id","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/muletto1/WebstormProjects/commIT_v2/frontend/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport axios from 'axios';\n\nconst UserContext = createContext();\n\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n\nexport const UserProvider = ({ children }) => {\n  const { isAuthenticated, user, getAccessTokenSilently } = useAuth0();\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 🔥 CRITICAL FIX: Load from localStorage on mount\n  useEffect(() => {\n    console.log('🔄 UserContext: Initializing...');\n    \n    // Try to load from localStorage first (for immediate access)\n    const cachedData = localStorage.getItem('user_data');\n    if (cachedData) {\n      try {\n        const parsed = JSON.parse(cachedData);\n        console.log('✅ UserContext: Loaded from localStorage:', parsed);\n        setUserData(parsed);\n        setLoading(false);\n      } catch (err) {\n        console.error('❌ UserContext: Error parsing localStorage:', err);\n        localStorage.removeItem('user_data');\n      }\n    } else {\n      console.log('⚠️ UserContext: No cached data found');\n      setLoading(false);\n    }\n  }, []);\n\n  // Fetch from API when authenticated\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      console.log('🔐 UserContext: User authenticated, fetching data...');\n      fetchUserData();\n    }\n  }, [isAuthenticated, user]);\n\n  const fetchUserData = async () => {\n    try {\n      console.log('📤 UserContext: Fetching user data from API...');\n      const token = await getAccessTokenSilently();\n      \n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/auth/me`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      \n      console.log('✅ UserContext: Raw API response:', response.data);\n      \n      // 🔥 CRITICAL FIX: Extract user object from response\n      // API returns: { success: true, user: {...} }\n      // We need to store just the user object\n      let userObject;\n      \n      if (response.data.user) {\n        // If response has a 'user' property, use that\n        userObject = response.data.user;\n        console.log('✅ UserContext: Extracted user from response.data.user');\n      } else if (response.data.user_type) {\n        // If response directly has user_type, it's already the user object\n        userObject = response.data;\n        console.log('✅ UserContext: Using response.data directly as user object');\n      } else {\n        console.error('❌ UserContext: Invalid API response structure:', response.data);\n        throw new Error('Invalid API response structure');\n      }\n      \n      console.log('✅ UserContext: Final user object:', userObject);\n      console.log('✅ UserContext: User type extracted:', userObject.user_type);\n      \n      // Store the clean user object\n      setUserData(userObject);\n      localStorage.setItem('user_data', JSON.stringify(userObject));\n      localStorage.setItem('user_type', userObject.user_type);\n      \n    } catch (err) {\n      console.error('❌ UserContext: Error fetching from API:', err);\n      setError(err.message);\n      \n      // Keep cached data if API fails\n      const cachedData = localStorage.getItem('user_data');\n      if (cachedData && !userData) {\n        console.log('⚠️ UserContext: Using cached data as fallback');\n        setUserData(JSON.parse(cachedData));\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateUserData = async (updates) => {\n    try {\n      setLoading(true);\n      const token = await getAccessTokenSilently();\n      \n      const response = await axios.put(\n        `${process.env.REACT_APP_API_URL}/users/profile`,\n        updates,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      \n      // 🔥 CRITICAL FIX: Handle response structure properly\n      let updatedUser;\n      if (response.data.user) {\n        updatedUser = response.data.user;\n      } else if (response.data.user_type) {\n        updatedUser = response.data;\n      } else {\n        throw new Error('Invalid update response structure');\n      }\n      \n      console.log('✅ UserContext: Profile updated:', updatedUser);\n      \n      setUserData(updatedUser);\n      localStorage.setItem('user_data', JSON.stringify(updatedUser));\n      localStorage.setItem('user_type', updatedUser.user_type);\n      \n      return updatedUser;\n    } catch (err) {\n      console.error('❌ UserContext: Error updating user data:', err);\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const clearUserData = () => {\n    console.log('🗑️ UserContext: Clearing user data');\n    setUserData(null);\n    localStorage.removeItem('user_data');\n    localStorage.removeItem('user_type');\n  };\n\n  // 🔥 CRITICAL FIX: userType extraction now works correctly\n  const value = {\n    userData,\n    userType: userData?.user_type || null,  // Clean extraction\n    loading,\n    error,\n    isAuthenticated,\n    fetchUserData,\n    updateUserData,\n    clearUserData,\n    isProvider: userData?.user_type === 'provider',\n    isCustomer: userData?.user_type === 'customer',\n    isAdmin: userData?.user_type === 'admin',\n  };\n\n  // Debug logging with more details\n  useEffect(() => {\n    console.log('📊 UserContext State:', {\n      userData: userData ? {\n        hasData: true,\n        email: userData.email,\n        user_type: userData.user_type,\n        _id: userData._id\n      } : 'Null',\n      userType: value.userType,\n      loading,\n      isAuthenticated,\n      isProvider: value.isProvider,\n      isCustomer: value.isCustomer,\n      isAdmin: value.isAdmin\n    });\n  }, [userData, loading, isAuthenticated]);\n\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}