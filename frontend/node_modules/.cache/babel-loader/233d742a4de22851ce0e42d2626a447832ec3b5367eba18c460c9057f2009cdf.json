{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\muletto1\\\\WebstormProjects\\\\commIT_v2\\\\frontend\\\\src\\\\contexts\\\\UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const useUser = () => {\n  _s();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n_s(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const UserProvider = ({\n  children\n}) => {\n  _s2();\n  const {\n    isAuthenticated,\n    user,\n    getAccessTokenSilently\n  } = useAuth0();\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      fetchUserData();\n    }\n  }, [isAuthenticated, user]);\n  const fetchUserData = async () => {\n    try {\n      setLoading(true);\n      const token = await getAccessTokenSilently();\n      const response = await axios.get(`${process.env.REACT_APP_API_URL}/auth/me`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUserData(response.data);\n      localStorage.setItem('user_data', JSON.stringify(response.data));\n    } catch (err) {\n      console.error('Error fetching user data:', err);\n      setError(err.message);\n\n      // Try to get from localStorage as fallback\n      const cachedData = localStorage.getItem('user_data');\n      if (cachedData) {\n        setUserData(JSON.parse(cachedData));\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateUserData = async updates => {\n    try {\n      setLoading(true);\n      const token = await getAccessTokenSilently();\n      const response = await axios.put(`${process.env.REACT_APP_API_URL}/users/profile`, updates, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUserData(response.data.user);\n      localStorage.setItem('user_data', JSON.stringify(response.data.user));\n      return response.data;\n    } catch (err) {\n      console.error('Error updating user data:', err);\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const clearUserData = () => {\n    setUserData(null);\n    localStorage.removeItem('user_data');\n  };\n  const value = {\n    userData,\n    loading,\n    error,\n    fetchUserData,\n    updateUserData,\n    clearUserData,\n    isProvider: (userData === null || userData === void 0 ? void 0 : userData.user_type) === 'provider',\n    isCustomer: (userData === null || userData === void 0 ? void 0 : userData.user_type) === 'customer',\n    isAdmin: (userData === null || userData === void 0 ? void 0 : userData.user_type) === 'admin'\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 10\n  }, this);\n};\n_s2(UserProvider, \"YRjCXyHHo0lHSt0dhyYH2PDI9g8=\", false, function () {\n  return [useAuth0];\n});\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useAuth0","axios","jsxDEV","_jsxDEV","UserContext","useUser","_s","context","Error","UserProvider","children","_s2","isAuthenticated","user","getAccessTokenSilently","userData","setUserData","loading","setLoading","error","setError","fetchUserData","token","response","get","process","env","REACT_APP_API_URL","headers","Authorization","data","localStorage","setItem","JSON","stringify","err","console","message","cachedData","getItem","parse","updateUserData","updates","put","clearUserData","removeItem","value","isProvider","user_type","isCustomer","isAdmin","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/muletto1/WebstormProjects/commIT_v2/frontend/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport axios from 'axios';\n\nconst UserContext = createContext();\n\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n\nexport const UserProvider = ({ children }) => {\n  const { isAuthenticated, user, getAccessTokenSilently } = useAuth0();\n  const [userData, setUserData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      fetchUserData();\n    }\n  }, [isAuthenticated, user]);\n\n  const fetchUserData = async () => {\n    try {\n      setLoading(true);\n      const token = await getAccessTokenSilently();\n      \n      const response = await axios.get(\n        `${process.env.REACT_APP_API_URL}/auth/me`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      \n      setUserData(response.data);\n      localStorage.setItem('user_data', JSON.stringify(response.data));\n    } catch (err) {\n      console.error('Error fetching user data:', err);\n      setError(err.message);\n      \n      // Try to get from localStorage as fallback\n      const cachedData = localStorage.getItem('user_data');\n      if (cachedData) {\n        setUserData(JSON.parse(cachedData));\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateUserData = async (updates) => {\n    try {\n      setLoading(true);\n      const token = await getAccessTokenSilently();\n      \n      const response = await axios.put(\n        `${process.env.REACT_APP_API_URL}/users/profile`,\n        updates,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      \n      setUserData(response.data.user);\n      localStorage.setItem('user_data', JSON.stringify(response.data.user));\n      return response.data;\n    } catch (err) {\n      console.error('Error updating user data:', err);\n      setError(err.message);\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const clearUserData = () => {\n    setUserData(null);\n    localStorage.removeItem('user_data');\n  };\n\n  const value = {\n    userData,\n    loading,\n    error,\n    fetchUserData,\n    updateUserData,\n    clearUserData,\n    isProvider: userData?.user_type === 'provider',\n    isCustomer: userData?.user_type === 'customer',\n    isAdmin: userData?.user_type === 'admin',\n  };\n\n  return <UserContext.Provider value={value}>{children}</UserContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}