{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\muletto1\\\\WebstormProjects\\\\commIT_v2\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// 🔐 Auth Context - Context API semplificato per autenticazione\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport AuthService from '../services/AuthService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // ==================== INITIALIZATION ====================\n\n  useEffect(() => {\n    console.log('🔄 AuthContext: Initializing...');\n    initializeAuth();\n  }, []);\n  const initializeAuth = useCallback(() => {\n    try {\n      // Carica dati utente da localStorage\n      const userData = AuthService.getUserData();\n      const isAuth = AuthService.isAuthenticated();\n      console.log('📊 Auth Status:', {\n        isAuthenticated: isAuth,\n        hasUserData: !!userData,\n        userType: userData === null || userData === void 0 ? void 0 : userData.user_type\n      });\n      if (isAuth && userData) {\n        setUser(userData);\n\n        // Fetch aggiornamento dati in background\n        fetchCurrentUser();\n      }\n    } catch (err) {\n      console.error('❌ Error initializing auth:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // ==================== AUTH OPERATIONS ====================\n\n  /**\n   * Fetch dati utente corrente dal server\n   */\n  const fetchCurrentUser = useCallback(async () => {\n    try {\n      const result = await AuthService.getCurrentUser();\n      if (result.success) {\n        setUser(result.user);\n        setError(null);\n        console.log('✅ User data updated');\n      } else {\n        console.warn('⚠️ Failed to fetch user data:', result.error);\n      }\n    } catch (err) {\n      console.error('❌ Error fetching user:', err);\n      // Non fare logout automatico, mantieni dati cached\n    }\n  }, []);\n\n  /**\n   * Registrazione\n   */\n  const register = useCallback(async userData => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await AuthService.register(userData);\n      if (result.success) {\n        setUser(result.user);\n        console.log('✅ Registration successful');\n        return {\n          success: true,\n          user: result.user\n        };\n      } else {\n        setError(result.error);\n        return {\n          success: false,\n          error: result.error\n        };\n      }\n    } catch (err) {\n      const errorMsg = err.message || 'Errore durante la registrazione';\n      setError(errorMsg);\n      return {\n        success: false,\n        error: errorMsg\n      };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Login\n   */\n  const login = useCallback(async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await AuthService.login(email, password);\n      if (result.success) {\n        setUser(result.user);\n        console.log('✅ Login successful');\n        return {\n          success: true,\n          user: result.user\n        };\n      } else {\n        setError(result.error);\n        return {\n          success: false,\n          error: result.error\n        };\n      }\n    } catch (err) {\n      const errorMsg = err.message || 'Errore durante il login';\n      setError(errorMsg);\n      return {\n        success: false,\n        error: errorMsg\n      };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Logout\n   */\n  const logout = useCallback(async () => {\n    try {\n      setLoading(true);\n      await AuthService.logout();\n      setUser(null);\n      setError(null);\n      console.log('✅ Logout successful');\n      return {\n        success: true\n      };\n    } catch (err) {\n      console.error('❌ Logout error:', err);\n      // Forza logout locale comunque\n      setUser(null);\n      return {\n        success: false,\n        error: err.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Aggiorna profilo\n   */\n  const updateProfile = useCallback(async updates => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await AuthService.updateProfile(updates);\n      if (result.success) {\n        setUser(result.user);\n        console.log('✅ Profile updated');\n        return {\n          success: true,\n          user: result.user\n        };\n      } else {\n        setError(result.error);\n        return {\n          success: false,\n          error: result.error\n        };\n      }\n    } catch (err) {\n      const errorMsg = err.message || 'Errore aggiornamento profilo';\n      setError(errorMsg);\n      return {\n        success: false,\n        error: errorMsg\n      };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Cambia password\n   */\n  const changePassword = useCallback(async (oldPassword, newPassword) => {\n    try {\n      setLoading(true);\n      setError(null);\n      const result = await AuthService.changePassword(oldPassword, newPassword);\n      if (result.success) {\n        console.log('✅ Password changed');\n        return {\n          success: true\n        };\n      } else {\n        setError(result.error);\n        return {\n          success: false,\n          error: result.error\n        };\n      }\n    } catch (err) {\n      const errorMsg = err.message || 'Errore cambio password';\n      setError(errorMsg);\n      return {\n        success: false,\n        error: errorMsg\n      };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // ==================== COMPUTED VALUES ====================\n\n  const value = {\n    // State\n    user,\n    loading,\n    error,\n    // Computed\n    isAuthenticated: !!user,\n    userType: (user === null || user === void 0 ? void 0 : user.user_type) || null,\n    isCustomer: (user === null || user === void 0 ? void 0 : user.user_type) === 'customer',\n    isProvider: (user === null || user === void 0 ? void 0 : user.user_type) === 'provider',\n    isAdmin: (user === null || user === void 0 ? void 0 : user.user_type) === 'admin',\n    // Operations\n    register,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    fetchCurrentUser,\n    // Utility\n    clearError: () => setError(null)\n  };\n\n  // Debug logging\n  useEffect(() => {\n    console.log('📊 AuthContext State:', {\n      isAuthenticated: value.isAuthenticated,\n      userType: value.userType,\n      loading,\n      error,\n      user: user ? {\n        email: user.email,\n        user_type: user.user_type,\n        _id: user._id\n      } : null\n    });\n  }, [user, loading, error, value.isAuthenticated, value.userType]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"XWT38FNBarIb3FxKF+y21VY1hBM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useCallback","AuthService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","console","log","initializeAuth","userData","getUserData","isAuth","isAuthenticated","hasUserData","userType","user_type","fetchCurrentUser","err","message","result","getCurrentUser","success","warn","register","errorMsg","login","email","password","logout","updateProfile","updates","changePassword","oldPassword","newPassword","value","isCustomer","isProvider","isAdmin","clearError","_id","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/muletto1/WebstormProjects/commIT_v2/frontend/src/contexts/AuthContext.js"],"sourcesContent":["// 🔐 Auth Context - Context API semplificato per autenticazione\nimport React, { createContext, useContext, useState, useEffect, useCallback } from 'react';\nimport AuthService from '../services/AuthService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // ==================== INITIALIZATION ====================\n\n  useEffect(() => {\n    console.log('🔄 AuthContext: Initializing...');\n    initializeAuth();\n  }, []);\n\n  const initializeAuth = useCallback(() => {\n    try {\n      // Carica dati utente da localStorage\n      const userData = AuthService.getUserData();\n      const isAuth = AuthService.isAuthenticated();\n\n      console.log('📊 Auth Status:', {\n        isAuthenticated: isAuth,\n        hasUserData: !!userData,\n        userType: userData?.user_type,\n      });\n\n      if (isAuth && userData) {\n        setUser(userData);\n        \n        // Fetch aggiornamento dati in background\n        fetchCurrentUser();\n      }\n    } catch (err) {\n      console.error('❌ Error initializing auth:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // ==================== AUTH OPERATIONS ====================\n\n  /**\n   * Fetch dati utente corrente dal server\n   */\n  const fetchCurrentUser = useCallback(async () => {\n    try {\n      const result = await AuthService.getCurrentUser();\n      \n      if (result.success) {\n        setUser(result.user);\n        setError(null);\n        console.log('✅ User data updated');\n      } else {\n        console.warn('⚠️ Failed to fetch user data:', result.error);\n      }\n    } catch (err) {\n      console.error('❌ Error fetching user:', err);\n      // Non fare logout automatico, mantieni dati cached\n    }\n  }, []);\n\n  /**\n   * Registrazione\n   */\n  const register = useCallback(async (userData) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const result = await AuthService.register(userData);\n\n      if (result.success) {\n        setUser(result.user);\n        console.log('✅ Registration successful');\n        return { success: true, user: result.user };\n      } else {\n        setError(result.error);\n        return { success: false, error: result.error };\n      }\n    } catch (err) {\n      const errorMsg = err.message || 'Errore durante la registrazione';\n      setError(errorMsg);\n      return { success: false, error: errorMsg };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Login\n   */\n  const login = useCallback(async (email, password) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const result = await AuthService.login(email, password);\n\n      if (result.success) {\n        setUser(result.user);\n        console.log('✅ Login successful');\n        return { success: true, user: result.user };\n      } else {\n        setError(result.error);\n        return { success: false, error: result.error };\n      }\n    } catch (err) {\n      const errorMsg = err.message || 'Errore durante il login';\n      setError(errorMsg);\n      return { success: false, error: errorMsg };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Logout\n   */\n  const logout = useCallback(async () => {\n    try {\n      setLoading(true);\n      await AuthService.logout();\n      setUser(null);\n      setError(null);\n      console.log('✅ Logout successful');\n      return { success: true };\n    } catch (err) {\n      console.error('❌ Logout error:', err);\n      // Forza logout locale comunque\n      setUser(null);\n      return { success: false, error: err.message };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Aggiorna profilo\n   */\n  const updateProfile = useCallback(async (updates) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const result = await AuthService.updateProfile(updates);\n\n      if (result.success) {\n        setUser(result.user);\n        console.log('✅ Profile updated');\n        return { success: true, user: result.user };\n      } else {\n        setError(result.error);\n        return { success: false, error: result.error };\n      }\n    } catch (err) {\n      const errorMsg = err.message || 'Errore aggiornamento profilo';\n      setError(errorMsg);\n      return { success: false, error: errorMsg };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Cambia password\n   */\n  const changePassword = useCallback(async (oldPassword, newPassword) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const result = await AuthService.changePassword(oldPassword, newPassword);\n\n      if (result.success) {\n        console.log('✅ Password changed');\n        return { success: true };\n      } else {\n        setError(result.error);\n        return { success: false, error: result.error };\n      }\n    } catch (err) {\n      const errorMsg = err.message || 'Errore cambio password';\n      setError(errorMsg);\n      return { success: false, error: errorMsg };\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // ==================== COMPUTED VALUES ====================\n\n  const value = {\n    // State\n    user,\n    loading,\n    error,\n    \n    // Computed\n    isAuthenticated: !!user,\n    userType: user?.user_type || null,\n    isCustomer: user?.user_type === 'customer',\n    isProvider: user?.user_type === 'provider',\n    isAdmin: user?.user_type === 'admin',\n    \n    // Operations\n    register,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    fetchCurrentUser,\n    \n    // Utility\n    clearError: () => setError(null),\n  };\n\n  // Debug logging\n  useEffect(() => {\n    console.log('📊 AuthContext State:', {\n      isAuthenticated: value.isAuthenticated,\n      userType: value.userType,\n      loading,\n      error,\n      user: user ? {\n        email: user.email,\n        user_type: user.user_type,\n        _id: user._id,\n      } : null,\n    });\n  }, [user, loading, error, value.isAuthenticated, value.userType]);\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}